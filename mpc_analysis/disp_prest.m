function disp_prest(tfd, t, f, x, famp, clim, fnts, varargin)
% DISP_PREST -- Display different presentations (TFD) for chirplet analysis
%
% Syntax:
%   disp_prest(tfd, t, f, x, famp, clim, fnts)
%   disp_prest(____, x_label)
%   disp_prest(____, x_label, y_label)
%
% Inputs:
%   tfd         - image of time-frequency distribution
%   t           - time data
%   f           - frequency data
%   x           - vector of the signal
%   famp        - vector of amplitudes of spectrum
%   clim        - range for axes property CLIM
%   fnts        - font size of axis labels
%   x_label     - (optional) label string of x-axis (default 'Time (s)')
%   y_label     - (optional) label string of y-axis (default 'Frequency
%                 (Hz)')
% 
% Note:
% 
% See also .

% Author(s):    R.J. Cui
%
% 3236 E Chandler Blvd Unit 2036
% Phoenix, AZ 85048, USA
%
% Email:    richard.cui@utoronto.ca

% Auto-generated by MATLAB on 26-Feb-2005 14:44:04
% (C)2005-2017 Richard J. Cui; Created 26-Feb-2005
% $Revision: 1.0 $  $Date: Tue 05/30/2017  1:36:04.627 PM $

% -------------------------------------------------------------------------
% inputs parse
% -------------------------------------------------------------------------
p = check_inputs(tfd, t, f, x, famp, clim, fnts, varargin{:});

tfd     = p.tfd;
t       = p.t;
f       = p.f;
x       = p.x;
famp    = p.famp;
clim    = p.clim;
fnts    = p.fnts;
x_label = p.x_label;
y_label = p.y_label;

% -------------------------------------------------------------------------
% show
% -------------------------------------------------------------------------
% waveform
L = length(x);              % signal length
tlb = t(1); tub = t(2);     % time range bounds
time = linspace(tlb,tub,L);
xmax = max(abs(x));         % for plotting signal 
slb = -xmax; sub = xmax;

% spectrum
M = length(famp);           % size of the tfd frequency
flb = f(1); fub = f(2);     % frequency bounds
f_range = linspace(flb,fub,M);
ampmin = 0;
ampmax = max(abs(famp));     % famp should be positive

% Create figure of tdf
fig_prest = figure;

% Create axes of tdf
Axestfd = axes(...
    'CLim',clim,...
    'Layer','top',...
    'Position',[0.2821 0.3028 0.6229 0.6695],...
    'Parent',fig_prest);
set(Axestfd,'box','on','XTickLabel','','YTickLabel','');
axis(Axestfd,[tlb tub flb fub]);
hold(Axestfd,'all');

% Create image of tdf
image(...
    'CData',tfd,...
    'CDataMapping','scaled',...
    'XData',t,...
    'YData',f,...
    'Parent',Axestfd);

% Create axes of signal
AxesSig = axes('Position',[0.2804 0.1116 0.6264 0.1508],'Parent',fig_prest);
set(AxesSig,'box','on');
axis(AxesSig,[tlb tub slb sub]);
xlabel(AxesSig, x_label,'FontSize',fnts);
hold(AxesSig,'all');

% Create plot of signal
plot(...
    time,x,...
    'Parent',AxesSig,...
    'DisplayName','sigxn',...
    'XDataSource','time',...
    'YDataSource','sigxn');

% Create axes of spectrum
AxesFreq = axes('Position',[0.1200 0.3048 0.1308 0.6675],'Parent',fig_prest);
set(AxesFreq,'box','on');
axis(AxesFreq,[ampmin ampmax f_range(1) f_range(end)])
ylabel(AxesFreq, y_label,'FontSize',fnts);
hold(AxesFreq,'all');

% Create plot of spectrum
plot(...
    famp,f_range,...
    'Color',[1 0 0],...
    'Parent',AxesFreq,...
    'DisplayName','freq');
set(gca,'XDir','reverse');

end

% =========================================================================
% subroutines
% =========================================================================
function q = check_inputs(tfd, t, f, x, famp, clim, fnts, varargin)

p = inputParser;

p.addRequired('tfd', @isnumeric);
p.addRequired('t', @isnumeric);
p.addRequired('f', @isnumeric);
p.addRequired('x', @isnumeric);
p.addRequired('famp', @isnumeric);
p.addRequired('clim', @isnumeric);
p.addRequired('fnts', @isnumeric);
p.addOptional('x_label', 'Time (s)', @isstr);
p.addOptional('y_label', 'Frequency (Hz)', @isstr);
p.parse(tfd, t, f, x, famp, clim, fnts, varargin{:});

q = p.Results;

end % function

% [EOF]